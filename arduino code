#include <Arduino.h>
#include <U8g2lib.h>
#include <math.h>

// SH1106 128×64 I²C OLED
U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, U8X8_PIN_NONE);

// 'boostguage', 128x64px
const unsigned char epd_bitmap_boostguage [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xf8, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0xe0, 0x3e, 0x00, 0x00, 0xb8, 0x0f, 0x00, 0x00, 0x00, 
	0xd8, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0xe0, 0x36, 0x00, 0x00, 0xb8, 0x01, 0x00, 0x00, 0x00, 
	0xd8, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0xc0, 0x36, 0x00, 0x00, 0xb0, 0x0f, 0x00, 0x00, 0x00, 
	0xd8, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0xc0, 0x36, 0x00, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x00, 
	0xd8, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0xc0, 0x36, 0x00, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x00, 
	0xf8, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0xc0, 0x3e, 0x00, 0x00, 0xb0, 0x0f, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x20, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0x20, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0x20, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0x20, 0x80, 0x00, 0x02, 0x08, 0x20, 0x80, 0x00, 0x02, 0x08, 0x20, 0x80, 0x00, 0x02, 0x08, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x09, 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xaa, 0xaa, 0xaa, 0x0a, 
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x09, 
@@ -62,56 +63,57 @@ const unsigned char epd_bitmap_boostguage [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t POT_PIN = A1;
const uint8_t MAP_PIN = A0;

void setup() {
  u8g2.begin();
}

void loop() {
  // 1) Pot set-point → 5–15 PSI
  int rawPot = analogRead(POT_PIN);
  int psiSet = map(rawPot, 0, 1023, 5, 15);

  // 2) MAP sensor → voltage → 0.2–4.8V → 0–43.5 PSI absolute
  int rawMap = analogRead(MAP_PIN);
  float V = rawMap * (5.0f / 1023.0f);
  float psiAbs = (V - 0.2f) * (43.5f / 4.6f);
  float psiMapF = psiAbs - 14.7f;        // convert to PSI gauge
  psiMapF = constrain(psiMapF, -15.0f, 20.0f);
  int psiMap = (int)roundf(psiMapF);

  // 3) Draw static background
  u8g2.clearBuffer();
  u8g2.drawXBMP(0, 0, 128, 64, epd_bitmap_boostguage);

  // 4) Horizontal bar fill at the very top (0–20 PSI → 0–120 px)
  const uint8_t BAR_X      = 6;
  const uint8_t BAR_Y      = 16;    
  const uint8_t BAR_MAX_W  = 116;
  const uint8_t BAR_HEIGHT = 8;
  int barW = map(psiMap, 0, 20, 0, BAR_MAX_W);
  u8g2.drawBox(BAR_X, BAR_Y, barW, BAR_HEIGHT);

  // 5) Pot setpoint text, lower-left
  u8g2.setFont(u8g2_font_fub11_tr);
  u8g2.setCursor(0, 62);
  u8g2.print(psiSet);
  u8g2.print(" PSI");

  // 6) MAP reading text, bottom-right
  char buf[8];
  snprintf(buf, sizeof(buf), "%d PSI", psiMap);
  uint8_t tw = u8g2.getUTF8Width(buf);
  u8g2.setCursor(128 - tw, 62);
  u8g2.print(buf);
